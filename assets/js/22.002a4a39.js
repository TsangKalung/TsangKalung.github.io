(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{456:function(a,t,e){"use strict";e.r(t);var s=e(53),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"_2018-5-24"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2018-5-24"}},[a._v("#")]),a._v(" 2018/5/24")]),a._v(" "),e("h2",{attrs:{id:"thinking-in-java"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thinking-in-java"}},[a._v("#")]),a._v(" "),e("em",[a._v("Thinking in Java")])]),a._v(" "),e("ul",[e("li",[a._v("Note that you cannot do the following, even though it is legal in C and C++,the compiler will announce that the variable "),e("code",[a._v("x")]),a._v(" has already been defined.Thus the C and C++ ability to “hide” a variable in a larger scope is not allowed because the Java designers thought that it led to confusing programs.")])]),a._v(" "),e("div",{staticClass:"language-Java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("96")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// Illegal")]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),e("ul",[e("li",[a._v("Note carefully that the default values are what Java guarantees when the\nvariable is used as a member of a class. This ensures that member\nvariables of primitive types will always be initialized (something C++\ndoesn’t do), reducing a source of bugs. However, this initial value may not\nbe correct or even legal for the program you are writing. It’s best to always\nexplicitly initialize your variables.\nThis guarantee doesn’t apply to “local” variables—those that are not fields of a class.Thus, if within a method definition you have,Then "),e("code",[a._v("x")]),a._v(" will get some "),e("strong",[a._v("arbitrary value")]),a._v(" (as in C and C++); it will not\nautomatically be initialized to zero. You are responsible for assigning an\nappropriate value before you use x. If you forget, Java definitely improves\non C++: you get a compile-time error telling you the variable might not\nhave been initialized.")])]),a._v(" "),e("div",{staticClass:"language-Java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),e("ul",[e("li",[e("code",[a._v("util")]),a._v(" contains a number of classes and you might want to use several of them without declaring them all explicitly. This is easily accomplished by using ‘*’ to indicate a wild card.")]),a._v(" "),e("li",[a._v("There are two ways to refer to a static variable. As indicated above, you can name it via an object, by saying, for example, st2.i. You can also refer to it directly through its class name, something you cannot do with a nonstatic member. (This is the preferred way to refer to a static variable since it emphasizes that variable’s static nature.)")])])])}),[],!1,null,null,null);t.default=n.exports}}]);