{"version":3,"sources":["webpack:///./src/templates/blog-list.tsx"],"names":["BlogIndex","data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","map","node","fields","slug","frontmatter","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","display","flexWrap","justifyContent","listStyle","padding","rel"],"mappings":"2FAAA,gFA8GeA,UA7EG,SAAC,GAIiB,IAHlCC,EAGkC,EAHlCA,KACAC,EAEkC,EAFlCA,SACAC,EACkC,EADlCA,YAEMC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAC7BC,EAA0BR,EAA1BQ,YAEFC,EAA0B,IAAhBD,EACVE,EAASF,IAHmBR,EAAbW,SAIfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,kBAAC,IAAD,CAAQd,SAAUA,EAAUK,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMU,KAAI,YAAc,IAAXC,EAAW,EAAXA,KAEZ,GAAyB,eAArBA,EAAKC,OAAOC,KAAuB,CACrC,IAAMd,EAAQY,EAAKG,YAAYf,OAASY,EAAKC,OAAOC,KACpD,OACE,6BAASE,IAAKJ,EAAKC,OAAOC,MACxB,gCACE,wBACEG,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAW,QAAUC,GAAIT,EAAKC,OAAOC,MACjDd,IAGL,+BAAQY,EAAKG,YAAYO,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKG,YAAYU,aAAeb,EAAKc,iBAS3D,6BACE,wBACET,MAAO,CACLU,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,6BACI1B,GACA,kBAAC,OAAD,CAAMgB,GAAIb,EAAUwB,IAAI,QAAxB,oBAKJ,6BACI1B,GACA,kBAAC,OAAD,CAAMe,GAAIX,EAAUsB,IAAI,QAAxB","file":"component---src-templates-blog-list-tsx-dd527bc22a57b2fd7c0d.js","sourcesContent":["import React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\ntype PageContext = {\n  currentPage: number\n  numPages: number\n}\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({\n  data,\n  location,\n  pageContext,\n}: PageProps<Data, PageContext>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const { currentPage, numPages } = pageContext\n\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? \"/\" : (currentPage - 1).toString()\n  const nextPage = (currentPage + 1).toString()\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      {posts.map(({ node }) => {\n        // hide about page\n        if (node.fields.slug !== \"/about-me/\") {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        }\n      })}\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {!isFirst && (\n              <Link to={prevPage} rel=\"prev\">\n                ← Previous Page\n              </Link>\n            )}\n          </li>\n          <li>\n            {!isLast && (\n              <Link to={nextPage} rel=\"next\">\n                Next Page →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}